name: new-pre-release

on:
    workflow_dispatch:
        inputs:
            new-version:
                description: 'New version to be set.'
                type: string
                required: true
            release-date:
                description: 'Release date.'
                type: string
                required: true

jobs:
    create-rc:
        runs-on: ubuntu-latest

        if: ${{ github.event.inputs.new-version }}
        steps:
            - uses: actions/checkout@v3
              with:
                  ref: dev

            - name: Create branch rc${{ github.event.inputs.new-version }}
              run: |
                  git checkout -b rc${{ github.event.inputs.new-version }}
                  git push -u origin rc${{ github.event.inputs.new-version }}

    build-rc:
        needs: create-rc
        runs-on: ubuntu-latest

        if: ${{ github.event.inputs.new-version }}
        steps:
            - uses: actions/checkout@v3
              with:
                  ref: rc${{ github.event.inputs.new-version }}

            - name: Install project dependencies
              run: npm install

            - name: Compile into production and check for compiling issues
              run: npm run build

    set-tag:
        needs: build-rc
        runs-on: ubuntu-latest

        if: ${{ github.event.inputs.new-version }}
        steps:
            # TODO: Remove the setUp git below since it will not be needed once token will be set
            - name: Configure Git with the GitHub Token
              run: |
                  git config --global user.email "sa_git_uicomponents@outsystems.com"
                  git config --global user.name "UiComponentsBot"
                  git config --global credential.helper store

            - uses: actions/checkout@v3
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  ref: rc${{ github.event.inputs.new-version }}
                  fetch-depth: 0 # Fetch all commits and tags
                  #   token: ${{ secrets.PAT }}

            - name: Set tag
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  git tag v${{ github.event.inputs.new-version }} HEAD -m "Version ${{ github.event.inputs.new-version }} released"
                  git push origin --tags

    set-prerelease:
        needs: set-tag
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0 # Fetch all commits and tags

            - name: Create Release
              id: create_release
              uses: softprops/action-gh-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: v${{ github.event.inputs.new-version }}
                  name: Release of version ${{ github.event.inputs.new-version }} (${{ github.event.inputs.release-date }})
                  body: |
                      ### What's New
                      - First
                      - ...

                      ### Fixed Issues and Improvements
                      - First
                      - ...

                  draft: false
                  prerelease: true
